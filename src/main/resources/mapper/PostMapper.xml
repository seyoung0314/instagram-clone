<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.instagramclone.repository.PostRepository">

    <!--    // 피드 게시물 저장-->
    <!--    insert문에는 특별하게 auto_increment로 지정한 key를 지정해줌-->
    <insert id="saveFeed" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO posts
        (content, member_id)
        VALUES
        (#{content}, #{memberId})
    </insert>


    <!--     피드 이미지 저장-->
    <insert id="saveFeedImage" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO post_images
        (post_id, image_url, image_order)
        VALUES
        (#{postId}, #{imageUrl}, #{imageOrder})
    </insert>

    <!--    특정 피드에 첨부된 이미지 목록을 조회-->
    <select id="findImagesByPostId" resultType="PostImage">
        SELECT
        *
        FROM post_images
        WHERE post_id = #{postId}
        ORDER BY image_order

    </select>

    <!--    전체 피드 게시물 목록 조회-->
    <select id="findAll" resultMap="PostResultMap">
        SELECT
        p.*
        ,u.username
        ,u.profile_image_url
        FROM posts p
        JOIN users u
        ON u.id = p.member_id
        ORDER BY created_at DESC, id DESC
    </select>

    <resultMap id="PostResultMap" type="Post">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="memberId" column="member_id"/>
        <result property="viewCount" column="view_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <!--    내부 단일 객체 매핑 설정    -->
        <association property="member" javaType="Member">
            <id property="id" column="id"/>
            <result property="username" column="username"/>
            <result property="profileImageUrl" column="profile_image_url"/>
        </association>
        <!--    내부 리스트 객체 매핑 설정    -->
        <collection property="images" ofType="PostImage">
            <result property="imageUrl" column="image_url"/>
            <result property="imageOrder" column="image_order"/>
        </collection>
    </resultMap>

    <!-- 특정 사용자의 피드 개수 조회 -->
    <select id="countByMemberId" resultType="long">
        select
        count(*)
        from posts
        where member_id = #{memberId}
    </select>

    <!-- 특정 사용자의 피드 목록 조회 -->
    <select id="findProfilePosts" resultType="ProfilePostResponse">
        SELECT p.id,
        pi.image_url as mainThumbnail
        FROM posts p
        INNER JOIN
        (SELECT post_id, image_url
        FROM post_images
        WHERE image_order = 1) pi
        ON p.id = pi.post_id
        WHERE p.member_id = #{memberId}
        ORDER BY p.created_at DESC
    </select>

    <!--  단일 피드 1개 상세 조회  -->
    <select id="findPostDetailById" resultMap="PostResultMap">
        select
        p.id
        ,p.content
        ,u.username
        ,u.profile_image_url
        ,pi.image_url
        ,pi.image_order
        from posts p
        join users u
        on p.member_id = u.id
        join post_images pi
        on p.id = pi.post_id
        where p.id = #{postId}
        order by pi.image_order
    </select>
</mapper>